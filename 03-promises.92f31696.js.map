{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAsBC,G,mBAyBtB,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KA3BHQ,CAAcT,EAAUC,GACrBS,MAAK,SAAAC,GACJC,QAAQC,IAAI,SAAUF,GACtBG,EAAArB,GAASsB,OAAOC,QACd,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAGjDiB,OAAM,SAAAC,GACLP,QAAQC,IAAI,QAASM,GACrBL,EAAArB,GAASsB,OAAOK,QACd,sBAAqCH,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAGjDA,GAASoB,C,EAnBXtB,EAAMuB,iBAKN,IAJA,IAAIrB,EAAQsB,OAAO5B,EAAO6B,SAASvB,MAAMwB,OACnCJ,EAAOE,OAAO5B,EAAO6B,SAASH,KAAKI,OACnCC,EAASH,OAAO5B,EAAO6B,SAASE,OAAOD,OAEpCE,EAAW,EAAGA,GAAYD,EAAQC,IAAUC,EAAAD,GAgBrDhC,EAAOkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let delay = Number(formEl.elements.delay.value);\n  const step = Number(formEl.elements.step.value);\n  const amount = Number(formEl.elements.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(result => {\n        console.log('result', result);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(error => {\n        console.log('error', error);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  formEl.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","result","console","log","$parcel$interopDefault","Notify","success","concat","catch","error","failure","step","preventDefault","Number","elements","value","amount","position1","_loop","reset"],"version":3,"file":"03-promises.92f31696.js.map"}